% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modvegesite.R
\name{ModvegeSite}
\alias{ModvegeSite}
\title{ModvegeSite}
\description{
Contains model and site parameters and state variables as attributes.
Has methods for running ModVege with weather and management input.
}
\note{
Technically, not all of the variables listed in 
`state_variable_names` are re-initialized, as some of them already hold 
the right values for the simulation. Particularly, this is the case for:
OMDDV, OMDDR

This function updates variables inside its parent environment.
}
\seealso{
:func:`get_target_biomass`
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ModvegeSite-new}{\code{ModvegeSite$new()}}
\item \href{#method-ModvegeSite-initialize_state_variables}{\code{ModvegeSite$initialize_state_variables()}}
\item \href{#method-ModvegeSite-get_weather}{\code{ModvegeSite$get_weather()}}
\item \href{#method-ModvegeSite-get_management}{\code{ModvegeSite$get_management()}}
\item \href{#method-ModvegeSite-get_start_of_growing_season}{\code{ModvegeSite$get_start_of_growing_season()}}
\item \href{#method-ModvegeSite-carry_over_from_last_day}{\code{ModvegeSite$carry_over_from_last_day()}}
\item \href{#method-ModvegeSite-calculate_growth}{\code{ModvegeSite$calculate_growth()}}
\item \href{#method-ModvegeSite-calculate_ageing}{\code{ModvegeSite$calculate_ageing()}}
\item \href{#method-ModvegeSite-update_biomass}{\code{ModvegeSite$update_biomass()}}
\item \href{#method-ModvegeSite-calculate_digestibility}{\code{ModvegeSite$calculate_digestibility()}}
\item \href{#method-ModvegeSite-apply_cuts}{\code{ModvegeSite$apply_cuts()}}
\item \href{#method-ModvegeSite-determine_cut_from_input}{\code{ModvegeSite$determine_cut_from_input()}}
\item \href{#method-ModvegeSite-determine_cut_automatically}{\code{ModvegeSite$determine_cut_automatically()}}
\item \href{#method-ModvegeSite-check_dry_days}{\code{ModvegeSite$check_dry_days()}}
\item \href{#method-ModvegeSite-get_target_biomass}{\code{ModvegeSite$get_target_biomass()}}
\item \href{#method-ModvegeSite-run}{\code{ModvegeSite$run()}}
\item \href{#method-ModvegeSite-make_header}{\code{ModvegeSite$make_header()}}
\item \href{#method-ModvegeSite-write_output}{\code{ModvegeSite$write_output()}}
\item \href{#method-ModvegeSite-set_parameters}{\code{ModvegeSite$set_parameters()}}
\item \href{#method-ModvegeSite-clone}{\code{ModvegeSite$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-new"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-new}{}}}
\subsection{Method \code{new()}}{
Constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$new(parameters, site_name = "-", run_name = "-")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parameters}}{A ModvegeParameters object.}

\item{\code{site_name}}{string Name of the simulated site.}

\item{\code{run_name}}{string Name of the simulation run. Used to 
differentiate between different simulation conditions at the same site.
Defaults to "-", which indicates no specific run name.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-initialize_state_variables"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-initialize_state_variables}{}}}
\subsection{Method \code{initialize_state_variables()}}{
Initialize all relevant state variables

Firstly, an empty vector of length *days_per_year* is created for each 
variable name in the vector `self$state_variable_names`.
Then, some additional variables relating to management and water balance 
are also initialized.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$initialize_state_variables()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-get_weather"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-get_weather}{}}}
\subsection{Method \code{get_weather()}}{
Return weather data if it exists
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$get_weather()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-get_management"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-get_management}{}}}
\subsection{Method \code{get_management()}}{
Return management data if it exists
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$get_management()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-get_start_of_growing_season"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-get_start_of_growing_season}{}}}
\subsection{Method \code{get_start_of_growing_season()}}{
Get index (or, equivalently, DOY) of the start of the growing season.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$get_start_of_growing_season(
  critical_temperature = 5,
  consider_snow = FALSE,
  critical_snow = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{critical_temperature}}{Daily average temperature in degree 
Celsius required for a day being considered "warm enough" for growth.}

\item{\code{consider_snow}}{Toggle whether the effect of snow cover is to be 
considered.}

\item{\code{critical_snow}}{Minimum daily snowfall in mm for a day to be 
considered snowy.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-carry_over_from_last_day"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-carry_over_from_last_day}{}}}
\subsection{Method \code{carry_over_from_last_day()}}{
Set calculation values to the values stored in 
previously used position.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$carry_over_from_last_day()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-calculate_growth"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-calculate_growth}{}}}
\subsection{Method \code{calculate_growth()}}{
Update all variables which change on a daily basis and 
calculate biomass production.

This function updates the following attributes:
LAIGV
AET
WR
ENVfPAR
ENVfT
ENVfW
ENV
PGRO
GRO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$calculate_growth()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-calculate_ageing"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-calculate_ageing}{}}}
\subsection{Method \code{calculate_ageing()}}{
Calculate the ageing, senescence and abscission of different biomass 
compartments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$calculate_ageing()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-update_biomass"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-update_biomass}{}}}
\subsection{Method \code{update_biomass()}}{
Calculate and update the amount of biomass in each 
compartment.

:TODO: These derived values can be calculated vectorially upon request.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$update_biomass()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-calculate_digestibility"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-calculate_digestibility}{}}}
\subsection{Method \code{calculate_digestibility()}}{
Caclulate the organic matter digestibility of each compartment.

:TODO: These derived values can be calculated vectorially upon 
request and thus do not need to be part of a for loop.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$calculate_digestibility()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-apply_cuts"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-apply_cuts}{}}}
\subsection{Method \code{apply_cuts()}}{
Simulate the effects of cuts on the grass growth.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$apply_cuts()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-determine_cut_from_input"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-determine_cut_from_input}{}}}
\subsection{Method \code{determine_cut_from_input()}}{
Read from the input whether a cut occurs on day *j*.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$determine_cut_from_input(DOY)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{DOY}}{Integer day of the year for which to check.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-determine_cut_automatically"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-determine_cut_automatically}{}}}
\subsection{Method \code{determine_cut_automatically()}}{
Decide based on simple criteria whether day of year *DOY* would be a 
good day to cut.

This follows an implementation described in
Petersen, Krischan, David Kraus, Pierluigi Calanca, Mikhail A. 
Semenov, Klaus Butterbach-Bahl, and Ralf Kiese. “Dynamic Simulation 
of Management Events for Assessing Impacts of Climate Change on 
Pre-Alpine Grassland Productivity.” European Journal of Agronomy 
128 (August 1, 2021): 126306. 
https://doi.org/10.1016/j.eja.2021.126306.

The decision to cut is made based on two criteria.
First, it is checked whether a *target biomass* is reached on given 
DOY. The defined target depends on the DOY and is given through 
:func:`get_target_biomass`. If said biomass is present, return `TRUE`.

Otherwise, it is checked whether a given amount of time has passed 
since the last cut. Depending on whether this is the first cut of 
the season or not, the relevant parameters are 
:int:`last_DOY_for_initial_cut` and :int:`max_cut_period`.
If that amount of time has passed, return `TRUE`, otherwise return 
`FALSE`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$determine_cut_automatically(DOY)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{DOY}}{Integer day of the year for which to make a cut decision.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-check_dry_days"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-check_dry_days}{}}}
\subsection{Method \code{check_dry_days()}}{
Return TRUE if there are only *dry* days in the next *n* 
days from given *DOY*.

:TODO:
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$check_dry_days()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-get_target_biomass"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-get_target_biomass}{}}}
\subsection{Method \code{get_target_biomass()}}{
Get target value of biomass on given *DOY*, which determines whether 
a cut is to occur.

The regression for the target biomass is based on Fig. S2 in the 
supplementary material of 
Petersen, Krischan, David Kraus, Pierluigi Calanca, Mikhail A. 
Semenov, Klaus Butterbach-Bahl, and Ralf Kiese. “Dynamic Simulation 
of Management Events for Assessing Impacts of Climate Change on 
Pre-Alpine Grassland Productivity.” European Journal of Agronomy 
128 (August 1, 2021): 126306. 
https://doi.org/10.1016/j.eja.2021.126306.

A refinement to expected yield as function of altitude has been 
implemented according to Table 1a in
Huguenen-Elie et al. "Düngung von Grasland", Agrarforschung Schweiz, 
8, (6), 2017, 
https://www.agrarforschungschweiz.ch/2017/06/9-duengung-von-grasland-grud-2017/
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$get_target_biomass(DOY, intensity = "high")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{DOY}}{Integer day of the year to consider.}

\item{\code{intensity}}{One of ["high", "middle", "low"] specifying 
management intensity..}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-run"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-run}{}}}
\subsection{Method \code{run()}}{
Carry out a ModVege simulation for one year.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$run(year, weather, management)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{year}}{Integer specifying the year to consider. [Unused?]}

\item{\code{weather}}{Weather List for given year as returned by 
:method:`Weather$get_weather_for_year`}

\item{\code{management}}{Management List for given year as provided by 
:class:`ModvegeEnvironment`'s :method:`get_environment_for_year`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-make_header"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-make_header}{}}}
\subsection{Method \code{make_header()}}{
Construct a string full of meta information on a ModVege 
run that can be inserted as a header to an output file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$make_header()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-write_output"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-write_output}{}}}
\subsection{Method \code{write_output()}}{
Write values of ModVege results into given file.

A header with metadata is prepended to the actual data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$write_output(filename)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{Path or name of filename to be created or overwritten.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-set_parameters"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-set_parameters}{}}}
\subsection{Method \code{set_parameters()}}{
Savely update the values in `self$parameters`.

Special care is taken to account for potential changes to 
functional group weights.

:TODO: This could be implemented using just a list as input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$set_parameters(param_names, param_values)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{param_names}}{Vector containing the names of the parameters to be 
updated.}

\item{\code{param_values}}{Vector containing the corresponding values to the 
parameters in *param_names*.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeSite-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeSite-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeSite$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
