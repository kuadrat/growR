% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameters.R
\name{ModvegeParameters}
\alias{ModvegeParameters}
\title{Parameter Data Object}
\description{
Data structure that contains site and vegetation parameters necessary for 
the configuration of an rmodvege simulation run.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ModvegeParameters-new}{\code{ModvegeParameters$new()}}
\item \href{#method-ModvegeParameters-read_parameters}{\code{ModvegeParameters$read_parameters()}}
\item \href{#method-ModvegeParameters-update_functional_group}{\code{ModvegeParameters$update_functional_group()}}
\item \href{#method-ModvegeParameters-clone}{\code{ModvegeParameters$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeParameters-new"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeParameters-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeParameters$new(param_file = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeParameters-read_parameters"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeParameters-read_parameters}{}}}
\subsection{Method \code{read_parameters()}}{
Read parameters from parameter file

Reads in parameters from the supplied *param_file* and stores them in 
internal fields.

This function carries out some basic sanity checks of 
the supplied *param_file* and reports on unidentified and missing 
parameter names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeParameters$read_parameters(param_file)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{param_file}}{Path or name of file to read parameters from.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
P List with field names as in the class variable 
  `parameter_names`.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeParameters-update_functional_group"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeParameters-update_functional_group}{}}}
\subsection{Method \code{update_functional_group()}}{
Update functional group parameters

Should be run whenever the functional group composition is changed in 
order to reflect the changes in the parameter list `self$P`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeParameters$update_functional_group()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModvegeParameters-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ModvegeParameters-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModvegeParameters$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
